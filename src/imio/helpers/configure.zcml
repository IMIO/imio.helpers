<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:monkey="http://namespaces.plone.org/monkey"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    i18n_domain="imio.helpers"
    >

  <include
      package="z3c.unconfigure"
      file="meta.zcml"
      />
  <include
      package="Products.CMFCore"
      file="permissions.zcml"
      />

  <include package="plone.app.intid" />
  <include package="plone.memoize" />
  <include package=".browser" />
  <include package=".fancytree" />
  <include file="profiles.zcml" />
  <include file="events.zcml" />

  <i18n:registerTranslations directory="locales" />

  <!-- unconfigure the default plone.memoize RAM cache utility,
         and register our own -->
  <unconfigure package="plone.memoize">
    <utility
        provides="zope.ramcache.interfaces.ram.IRAMCache"
        component="plone.memoize.ram.global_cache"
        />
  </unconfigure>
  <utility
      provides="zope.ramcache.interfaces.ram.IRAMCache"
      component=".ram.imio_global_cache"
      />

  <browser:page
      name="appy_pod_sample"
      for="*"
      class=".appy_pod.AppyPodSampleHTML"
      permission="zope.Public"
      />

  <adapter
      factory=".adapters.ListContainedDexterityObjectsForDisplayAdapter"
      provides="imio.helpers.interfaces.IListContainedDexterityObjectsForDisplay"
      for="plone.dexterity.interfaces.IDexterityContainer"
      />

  <include package="collective.monkeypatcher" />

  <configure zcml:condition="installed collective.solr">
    <monkey:patch
        original="index"
        replacement=".patches.solr_index"
        class="collective.solr.indexer.SolrIndexProcessor"
        description="Fix the issue https://github.com/collective/collective.solr/issues/189"
        preserveOriginal="true"
        />
  </configure>

  <monkey:patch
      original="_makeMailer"
      replacement=".patches.ssl_makeMailer"
      class="Products.MailHost.MailHost.MailBase"
      description="Handled 465 port (SSL) smtp"
      preserveOriginal="true"
      />

  <monkey:patch
      original="assignRolesToPrincipal"
      replacement=".patches.assignRolesToPrincipal"
      class="Products.PlonePAS.plugins.role.GroupAwareRoleManager"
      description="Invalidate '_users_groups_value' volatile after principal role change"
      preserveOriginal="true"
      />

  <monkey:patch
      original="assignRoleToPrincipal"
      replacement=".patches.assignRoleToPrincipal"
      class="Products.PluggableAuthService.plugins.ZODBRoleManager.ZODBRoleManager"
      description="Invalidate '_users_groups_value' volatile after principal role change"
      preserveOriginal="true"
      />

  <monkey:patch
      original="removeRoleFromPrincipal"
      replacement=".patches.removeRoleFromPrincipal"
      class="Products.PluggableAuthService.plugins.ZODBRoleManager.ZODBRoleManager"
      description="Invalidate '_users_groups_value' volatile after principal role change"
      preserveOriginal="true"
      />

  <monkey:patch
      original="_listAllowedRolesAndUsers"
      replacement=".patches._listAllowedRolesAndUsers"
      class="Products.CMFPlone.CatalogTool.CatalogTool"
      description="Monkeypatch _listAllowedRolesAndUsers to add ram.cache on '_users_groups_value'"
      preserveOriginal="true"
      />

  <monkey:patch
      original="getVocabularyValues"
      replacement=".patches.getVocabularyValues"
      class="plone.app.querystring.registryreader.QuerystringRegistryReader"
      description="Monkeypatch getVocabularyValues from plone.app.querystring to keep vocabulary order"
      preserveOriginal="true"
      zcml:condition="not-have plone-5"
      />

  <utility
      name="imio.helpers.SortedUsers"
      component=".vocabularies.SortedUsersFactory"
      />

  <utility
      name="imio.helpers.SimplySortedUsers"
      component=".vocabularies.SimplySortedUsersFactory"
      />

  <utility
      factory="imio.helpers.vocabularies.YesNoForFacetedVocabulary"
      name="imio.helpers.YesNoForFacetedVocabulary"
      />

</configure>
